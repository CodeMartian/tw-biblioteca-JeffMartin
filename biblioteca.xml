<?xml version="1.0" encoding="UTF-8"?>
<project name="biblioteca" default="all">
  
  
  <property file="biblioteca.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/packager.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.junit-4.11.classpath">
    <pathelement location="${basedir}/lib/junit-4.11.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module biblioteca -->
  
  <dirname property="module.biblioteca.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.biblioteca" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.biblioteca" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.biblioteca" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.biblioteca" value="-encoding UTF-8 -source 6 -target 6 ${compiler.args}"/>
  
  <property name="biblioteca.output.dir" value="${module.biblioteca.basedir}/out/production/biblioteca"/>
  <property name="biblioteca.testoutput.dir" value="${module.biblioteca.basedir}/out/test/biblioteca"/>
  
  <path id="biblioteca.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="biblioteca.module.production.classpath">
    <path refid="${module.jdk.classpath.biblioteca}"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="biblioteca.runtime.production.module.classpath">
    <pathelement location="${biblioteca.output.dir}"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="biblioteca.module.classpath">
    <path refid="${module.jdk.classpath.biblioteca}"/>
    <pathelement location="${biblioteca.output.dir}"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  <path id="biblioteca.runtime.module.classpath">
    <pathelement location="${biblioteca.testoutput.dir}"/>
    <pathelement location="${biblioteca.output.dir}"/>
    <path refid="library.junit-4.11.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.biblioteca">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.biblioteca">
    <patternset refid="excluded.from.module.biblioteca"/>
  </patternset>
  
  <path id="biblioteca.module.sourcepath">
    <dirset dir="${module.biblioteca.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="biblioteca.module.test.sourcepath">
    <dirset dir="${module.biblioteca.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.biblioteca" depends="compile.module.biblioteca.production,compile.module.biblioteca.tests" description="Compile module biblioteca"/>
  
  <target name="compile.module.biblioteca.production" depends="register.custom.compilers" description="Compile module biblioteca; production classes">
    <mkdir dir="${biblioteca.output.dir}"/>
    <javac2 destdir="${biblioteca.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.biblioteca}/javac">
      <compilerarg line="${compiler.args.biblioteca}"/>
      <bootclasspath refid="biblioteca.module.bootclasspath"/>
      <classpath refid="biblioteca.module.production.classpath"/>
      <src refid="biblioteca.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.biblioteca"/>
    </javac2>
    
    <copy todir="${biblioteca.output.dir}">
      <fileset dir="${module.biblioteca.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.biblioteca.tests" depends="register.custom.compilers,compile.module.biblioteca.production" description="compile module biblioteca; test classes" unless="skip.tests">
    <mkdir dir="${biblioteca.testoutput.dir}"/>
    <javac2 destdir="${biblioteca.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.biblioteca}/javac">
      <compilerarg line="${compiler.args.biblioteca}"/>
      <bootclasspath refid="biblioteca.module.bootclasspath"/>
      <classpath refid="biblioteca.module.classpath"/>
      <src refid="biblioteca.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.biblioteca"/>
    </javac2>
    
    <copy todir="${biblioteca.testoutput.dir}">
      <fileset dir="${module.biblioteca.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.biblioteca" description="cleanup module">
    <delete dir="${biblioteca.output.dir}"/>
    <delete dir="${biblioteca.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.biblioteca" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.biblioteca" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>